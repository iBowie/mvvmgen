// ***********************************************************************
// ⚡ MvvmLightGen => https://github.com/thomasclaudiushuber/mvvmgen
// Copyright © by Thomas Claudius Huber
// Licensed under the MIT license => See LICENSE file in repository root
// ***********************************************************************

using Xunit;

namespace MvvmLightGen.SourceGenerators
{
    public class ViewModelAttributeTests : ViewModelGeneratorTestsBase
    {
        [InlineData("[MvvmLightGen.ViewModel]")]
        [InlineData("[ViewModel]")]
        [Theory]
        public void GenerateViewModel(string attribute)
        {
            ShouldGenerateExpectedCode(
      $@"using MvvmLightGen;

namespace MyCode
{{
  {attribute}
  public partial class EmployeeViewModel
  {{
  }}
}}",
      $@"{AutoGeneratedComment}
{AutoGeneratedUsings}

namespace MyCode
{{
    partial class EmployeeViewModel : global::MvvmLightGen.ViewModels.ViewModelBase
    {{
        public EmployeeViewModel()
        {{
            this.OnInitialize();
        }}

        partial void OnInitialize();
    }}
}}
");
        }

        [Fact]
        public void GenerateViewModelWithoutConstructor()
        {
            ShouldGenerateExpectedCode(
      $@"using MvvmLightGen;

namespace MyCode
{{
  [ViewModel(GenerateConstructor=false)]
  public partial class EmployeeViewModel
  {{
  }}
}}",
      $@"{AutoGeneratedComment}
{AutoGeneratedUsings}

namespace MyCode
{{
    partial class EmployeeViewModel : global::MvvmLightGen.ViewModels.ViewModelBase
    {{
    }}
}}
");
        }

        [Fact]
        public void GenerateViewModelWithoutConstructorNoEmptyLineForFirstMember()
        {
            ShouldGenerateExpectedCode(
      $@"using MvvmLightGen;

namespace MyCode
{{
  [Inject(typeof(string),""InjectedString"")]
  [ViewModel(GenerateConstructor=false)]
  public partial class EmployeeViewModel
  {{
  }}
}}",
      $@"{AutoGeneratedComment}
{AutoGeneratedUsings}

namespace MyCode
{{
    partial class EmployeeViewModel : global::MvvmLightGen.ViewModels.ViewModelBase
    {{
        protected string InjectedString {{ get; private set; }}
    }}
}}
");
        }

        [Fact]
        public void GenerateViewModelBaseNotIfClassIndirectlyInheritsFromIt()
        {
            ShouldGenerateExpectedCode(
       @"using System.ComponentModel;
using MvvmLightGen;
using MvvmLightGen.ViewModels;

namespace MyCode
{
  public class CustomViewModelBase : global::MvvmLightGen.ViewModels.ViewModelBase
  {
    protected void OnPropertyChanged(string propertyName) { }
  }

  [ViewModel]
  public partial class EmployeeViewModel : CustomViewModelBase
  {
  }
}",
       $@"{AutoGeneratedComment}
{AutoGeneratedUsings}

namespace MyCode
{{
    partial class EmployeeViewModel
    {{
        public EmployeeViewModel()
        {{
            this.OnInitialize();
        }}

        partial void OnInitialize();
    }}
}}
");
        }

        [Fact]
        public void GenerateViewModelBaseNotIfClassIndirectlyInheritsFromItViewAnotherViewModelAttribute()
        {
            ShouldGenerateExpectedCode(
       @"using System.ComponentModel;
using MvvmLightGen;
using MvvmLightGen.ViewModels;

namespace MyCode
{
  [ViewModel]
  public class CustomViewModelBase
  {
  }

  [ViewModel]
  public partial class EmployeeViewModel : CustomViewModelBase
  {
  }
}",
         $@"{AutoGeneratedComment}
{AutoGeneratedUsings}

namespace MyCode
{{
    partial class CustomViewModelBase : global::MvvmLightGen.ViewModels.ViewModelBase
    {{
        public CustomViewModelBase()
        {{
            this.OnInitialize();
        }}

        partial void OnInitialize();
    }}
}}
",
       $@"{AutoGeneratedComment}
{AutoGeneratedUsings}

namespace MyCode
{{
    partial class EmployeeViewModel
    {{
        public EmployeeViewModel()
        {{
            this.OnInitialize();
        }}

        partial void OnInitialize();
    }}
}}
");
        }

        [Fact]
        public void GenerateViewModelBaseNotIfClassIndirectlyInheritsFromItViewAnotherViewModelAttributeWithMoreLevels()
        {
            ShouldGenerateExpectedCode(
       $@"using System.ComponentModel;
using MvvmLightGen;
using MvvmLightGen.ViewModels;

namespace MyCode
{{
  [ViewModel]
  public class MoreCustomViewModelBase
  {{
  }}

  [ViewModel]
  public class CustomViewModelBase : MoreCustomViewModelBase
  {{
  }}

  [ViewModel]
  public partial class EmployeeViewModel : CustomViewModelBase
  {{
  }}
}}",
          $@"{AutoGeneratedComment}
{AutoGeneratedUsings}

namespace MyCode
{{
    partial class MoreCustomViewModelBase : global::MvvmLightGen.ViewModels.ViewModelBase
    {{
        public MoreCustomViewModelBase()
        {{
            this.OnInitialize();
        }}

        partial void OnInitialize();
    }}
}}
", $@"{AutoGeneratedComment}
{AutoGeneratedUsings}

namespace MyCode
{{
    partial class CustomViewModelBase
    {{
        public CustomViewModelBase()
        {{
            this.OnInitialize();
        }}

        partial void OnInitialize();
    }}
}}
",
       $@"{AutoGeneratedComment}
{AutoGeneratedUsings}

namespace MyCode
{{
    partial class EmployeeViewModel
    {{
        public EmployeeViewModel()
        {{
            this.OnInitialize();
        }}

        partial void OnInitialize();
    }}
}}
");
        }

        [Fact]
        public void GenerateViewModelBaseNotIfClassIndirectlyInheritsFromItViewAnotherViewModelAttributeWithMoreLevelsAndWithoutViewModelAttributeOnMiddleClass()
        {
            ShouldGenerateExpectedCode(
       $@"using System.ComponentModel;
using MvvmLightGen;
using MvvmLightGen.ViewModels;

namespace MyCode
{{
  [ViewModel]
  public class MoreCustomViewModelBase
  {{
  }}

  // [ViewModel]
  public class CustomViewModelBase : MoreCustomViewModelBase
  {{
  }}

  [ViewModel]
  public partial class EmployeeViewModel : CustomViewModelBase
  {{
  }}
}}",
          $@"{AutoGeneratedComment}
{AutoGeneratedUsings}

namespace MyCode
{{
    partial class MoreCustomViewModelBase : global::MvvmLightGen.ViewModels.ViewModelBase
    {{
        public MoreCustomViewModelBase()
        {{
            this.OnInitialize();
        }}

        partial void OnInitialize();
    }}
}}
",
       $@"{AutoGeneratedComment}
{AutoGeneratedUsings}

namespace MyCode
{{
    partial class EmployeeViewModel
    {{
        public EmployeeViewModel()
        {{
            this.OnInitialize();
        }}

        partial void OnInitialize();
    }}
}}
");
        }

        [InlineData("ModelType=typeof(Employee)")]
        [InlineData("typeof(Employee)")]
        [Theory]
        public void GenerateModelProperties(string attributeArgument)
        {
            ShouldGenerateExpectedCode(
      $@"using MvvmLightGen;

namespace MyCode
{{
    public class Employee
    {{
        public string FirstName {{ get; set; }}
        public bool IsDeveloper {{ get; set; }}
    }}

    [ViewModel({attributeArgument})]
    public partial class EmployeeViewModel
    {{
    }}
}}",
      $@"{AutoGeneratedComment}
{AutoGeneratedUsings}

namespace MyCode
{{
    partial class EmployeeViewModel : global::MvvmLightGen.ViewModels.ViewModelBase
    {{
        public EmployeeViewModel()
        {{
            this.OnInitialize();
        }}

        partial void OnInitialize();

        public string FirstName
        {{
            get => Model.FirstName;
            set
            {{
                if (Model.FirstName != value)
                {{
                    Model.FirstName = value;
                    OnPropertyChanged(""FirstName"");
                }}
            }}
        }}

        public bool IsDeveloper
        {{
            get => Model.IsDeveloper;
            set
            {{
                if (Model.IsDeveloper != value)
                {{
                    Model.IsDeveloper = value;
                    OnPropertyChanged(""IsDeveloper"");
                }}
            }}
        }}

        protected MyCode.Employee Model {{ get; set; }}
    }}
}}
");
        }
        [InlineData("ModelType=typeof(Employee)")]
        [InlineData("typeof(Employee)")]
        [Theory]
        public void GenerateModelPropertiesWhenReadOnlyPropsExist(string attributeArgument)
        {
            ShouldGenerateExpectedCode(
      $@"using MvvmLightGen;

namespace MyCode
{{
    public class Employee
    {{
        public Employee (int id)
        {{
            Id = id;
        }}
        public int Id {{ get; }}
        public bool IsDeveloper {{ get; set; }}
    }}

    [ViewModel({attributeArgument})]
    public partial class EmployeeViewModel
    {{
    }}
}}",
      $@"{AutoGeneratedComment}
{AutoGeneratedUsings}

namespace MyCode
{{
    partial class EmployeeViewModel : global::MvvmLightGen.ViewModels.ViewModelBase
    {{
        public EmployeeViewModel()
        {{
            this.OnInitialize();
        }}

        partial void OnInitialize();

        public int Id => Model.Id;

        public bool IsDeveloper
        {{
            get => Model.IsDeveloper;
            set
            {{
                if (Model.IsDeveloper != value)
                {{
                    Model.IsDeveloper = value;
                    OnPropertyChanged(""IsDeveloper"");
                }}
            }}
        }}

        protected MyCode.Employee Model {{ get; set; }}
    }}
}}
");
        }
    }
}
